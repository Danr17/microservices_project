// Code generated by protoc-gen-go. DO NOT EDIT.
// source: premierleague.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TableRequest struct {
	TableName            string   `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableRequest) Reset()         { *m = TableRequest{} }
func (m *TableRequest) String() string { return proto.CompactTextString(m) }
func (*TableRequest) ProtoMessage()    {}
func (*TableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{0}
}

func (m *TableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableRequest.Unmarshal(m, b)
}
func (m *TableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableRequest.Marshal(b, m, deterministic)
}
func (m *TableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableRequest.Merge(m, src)
}
func (m *TableRequest) XXX_Size() int {
	return xxx_messageInfo_TableRequest.Size(m)
}
func (m *TableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TableRequest proto.InternalMessageInfo

func (m *TableRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

type Table struct {
	TeamName             string   `protobuf:"bytes,1,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	TeamPlayed           int32    `protobuf:"varint,2,opt,name=team_played,json=teamPlayed,proto3" json:"team_played,omitempty"`
	TeamWon              int32    `protobuf:"varint,3,opt,name=team_won,json=teamWon,proto3" json:"team_won,omitempty"`
	TeamDrawn            int32    `protobuf:"varint,4,opt,name=team_drawn,json=teamDrawn,proto3" json:"team_drawn,omitempty"`
	TeamLost             int32    `protobuf:"varint,5,opt,name=team_lost,json=teamLost,proto3" json:"team_lost,omitempty"`
	TeamGf               int32    `protobuf:"varint,6,opt,name=team_gf,json=teamGf,proto3" json:"team_gf,omitempty"`
	TeamGa               int32    `protobuf:"varint,7,opt,name=team_ga,json=teamGa,proto3" json:"team_ga,omitempty"`
	TeamGd               int32    `protobuf:"varint,8,opt,name=team_gd,json=teamGd,proto3" json:"team_gd,omitempty"`
	TeamPoints           int32    `protobuf:"varint,9,opt,name=team_points,json=teamPoints,proto3" json:"team_points,omitempty"`
	TeamCapital          int32    `protobuf:"varint,10,opt,name=team_capital,json=teamCapital,proto3" json:"team_capital,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Table) Reset()         { *m = Table{} }
func (m *Table) String() string { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()    {}
func (*Table) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{1}
}

func (m *Table) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Table.Unmarshal(m, b)
}
func (m *Table) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Table.Marshal(b, m, deterministic)
}
func (m *Table) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Table.Merge(m, src)
}
func (m *Table) XXX_Size() int {
	return xxx_messageInfo_Table.Size(m)
}
func (m *Table) XXX_DiscardUnknown() {
	xxx_messageInfo_Table.DiscardUnknown(m)
}

var xxx_messageInfo_Table proto.InternalMessageInfo

func (m *Table) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

func (m *Table) GetTeamPlayed() int32 {
	if m != nil {
		return m.TeamPlayed
	}
	return 0
}

func (m *Table) GetTeamWon() int32 {
	if m != nil {
		return m.TeamWon
	}
	return 0
}

func (m *Table) GetTeamDrawn() int32 {
	if m != nil {
		return m.TeamDrawn
	}
	return 0
}

func (m *Table) GetTeamLost() int32 {
	if m != nil {
		return m.TeamLost
	}
	return 0
}

func (m *Table) GetTeamGf() int32 {
	if m != nil {
		return m.TeamGf
	}
	return 0
}

func (m *Table) GetTeamGa() int32 {
	if m != nil {
		return m.TeamGa
	}
	return 0
}

func (m *Table) GetTeamGd() int32 {
	if m != nil {
		return m.TeamGd
	}
	return 0
}

func (m *Table) GetTeamPoints() int32 {
	if m != nil {
		return m.TeamPoints
	}
	return 0
}

func (m *Table) GetTeamCapital() int32 {
	if m != nil {
		return m.TeamCapital
	}
	return 0
}

type TableReply struct {
	Teams                []*Table `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableReply) Reset()         { *m = TableReply{} }
func (m *TableReply) String() string { return proto.CompactTextString(m) }
func (*TableReply) ProtoMessage()    {}
func (*TableReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{2}
}

func (m *TableReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableReply.Unmarshal(m, b)
}
func (m *TableReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableReply.Marshal(b, m, deterministic)
}
func (m *TableReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableReply.Merge(m, src)
}
func (m *TableReply) XXX_Size() int {
	return xxx_messageInfo_TableReply.Size(m)
}
func (m *TableReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TableReply.DiscardUnknown(m)
}

var xxx_messageInfo_TableReply proto.InternalMessageInfo

func (m *TableReply) GetTeams() []*Table {
	if m != nil {
		return m.Teams
	}
	return nil
}

type TeamRequest struct {
	TeamName             string   `protobuf:"bytes,1,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamRequest) Reset()         { *m = TeamRequest{} }
func (m *TeamRequest) String() string { return proto.CompactTextString(m) }
func (*TeamRequest) ProtoMessage()    {}
func (*TeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{3}
}

func (m *TeamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamRequest.Unmarshal(m, b)
}
func (m *TeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamRequest.Marshal(b, m, deterministic)
}
func (m *TeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamRequest.Merge(m, src)
}
func (m *TeamRequest) XXX_Size() int {
	return xxx_messageInfo_TeamRequest.Size(m)
}
func (m *TeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TeamRequest proto.InternalMessageInfo

func (m *TeamRequest) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

type Player struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Team                 string   `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Nationality          string   `protobuf:"bytes,3,opt,name=nationality,proto3" json:"nationality,omitempty"`
	Position             string   `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Appearences          int32    `protobuf:"varint,5,opt,name=appearences,proto3" json:"appearences,omitempty"`
	Goals                int32    `protobuf:"varint,6,opt,name=goals,proto3" json:"goals,omitempty"`
	Assists              int32    `protobuf:"varint,7,opt,name=assists,proto3" json:"assists,omitempty"`
	Passes               int32    `protobuf:"varint,8,opt,name=passes,proto3" json:"passes,omitempty"`
	Interceptions        int32    `protobuf:"varint,9,opt,name=interceptions,proto3" json:"interceptions,omitempty"`
	Tackles              int32    `protobuf:"varint,10,opt,name=tackles,proto3" json:"tackles,omitempty"`
	Fouls                int32    `protobuf:"varint,11,opt,name=fouls,proto3" json:"fouls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{4}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *Player) GetNationality() string {
	if m != nil {
		return m.Nationality
	}
	return ""
}

func (m *Player) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Player) GetAppearences() int32 {
	if m != nil {
		return m.Appearences
	}
	return 0
}

func (m *Player) GetGoals() int32 {
	if m != nil {
		return m.Goals
	}
	return 0
}

func (m *Player) GetAssists() int32 {
	if m != nil {
		return m.Assists
	}
	return 0
}

func (m *Player) GetPasses() int32 {
	if m != nil {
		return m.Passes
	}
	return 0
}

func (m *Player) GetInterceptions() int32 {
	if m != nil {
		return m.Interceptions
	}
	return 0
}

func (m *Player) GetTackles() int32 {
	if m != nil {
		return m.Tackles
	}
	return 0
}

func (m *Player) GetFouls() int32 {
	if m != nil {
		return m.Fouls
	}
	return 0
}

type Players struct {
	Players              []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Players) Reset()         { *m = Players{} }
func (m *Players) String() string { return proto.CompactTextString(m) }
func (*Players) ProtoMessage()    {}
func (*Players) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{5}
}

func (m *Players) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Players.Unmarshal(m, b)
}
func (m *Players) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Players.Marshal(b, m, deterministic)
}
func (m *Players) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Players.Merge(m, src)
}
func (m *Players) XXX_Size() int {
	return xxx_messageInfo_Players.Size(m)
}
func (m *Players) XXX_DiscardUnknown() {
	xxx_messageInfo_Players.DiscardUnknown(m)
}

var xxx_messageInfo_Players proto.InternalMessageInfo

func (m *Players) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type PositionRequest struct {
	Position             string   `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionRequest) Reset()         { *m = PositionRequest{} }
func (m *PositionRequest) String() string { return proto.CompactTextString(m) }
func (*PositionRequest) ProtoMessage()    {}
func (*PositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{6}
}

func (m *PositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionRequest.Unmarshal(m, b)
}
func (m *PositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionRequest.Marshal(b, m, deterministic)
}
func (m *PositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionRequest.Merge(m, src)
}
func (m *PositionRequest) XXX_Size() int {
	return xxx_messageInfo_PositionRequest.Size(m)
}
func (m *PositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionRequest proto.InternalMessageInfo

func (m *PositionRequest) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

type PlayerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerRequest) Reset()         { *m = PlayerRequest{} }
func (m *PlayerRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerRequest) ProtoMessage()    {}
func (*PlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{7}
}

func (m *PlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerRequest.Unmarshal(m, b)
}
func (m *PlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerRequest.Marshal(b, m, deterministic)
}
func (m *PlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerRequest.Merge(m, src)
}
func (m *PlayerRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerRequest.Size(m)
}
func (m *PlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerRequest proto.InternalMessageInfo

func (m *PlayerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OpsReply struct {
	Ops                  string   `protobuf:"bytes,1,opt,name=ops,proto3" json:"ops,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpsReply) Reset()         { *m = OpsReply{} }
func (m *OpsReply) String() string { return proto.CompactTextString(m) }
func (*OpsReply) ProtoMessage()    {}
func (*OpsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{8}
}

func (m *OpsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpsReply.Unmarshal(m, b)
}
func (m *OpsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpsReply.Marshal(b, m, deterministic)
}
func (m *OpsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpsReply.Merge(m, src)
}
func (m *OpsReply) XXX_Size() int {
	return xxx_messageInfo_OpsReply.Size(m)
}
func (m *OpsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpsReply.DiscardUnknown(m)
}

var xxx_messageInfo_OpsReply proto.InternalMessageInfo

func (m *OpsReply) GetOps() string {
	if m != nil {
		return m.Ops
	}
	return ""
}

type TeamCapitalRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamCapitalRequest) Reset()         { *m = TeamCapitalRequest{} }
func (m *TeamCapitalRequest) String() string { return proto.CompactTextString(m) }
func (*TeamCapitalRequest) ProtoMessage()    {}
func (*TeamCapitalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{9}
}

func (m *TeamCapitalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamCapitalRequest.Unmarshal(m, b)
}
func (m *TeamCapitalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamCapitalRequest.Marshal(b, m, deterministic)
}
func (m *TeamCapitalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamCapitalRequest.Merge(m, src)
}
func (m *TeamCapitalRequest) XXX_Size() int {
	return xxx_messageInfo_TeamCapitalRequest.Size(m)
}
func (m *TeamCapitalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamCapitalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TeamCapitalRequest proto.InternalMessageInfo

func (m *TeamCapitalRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TeamCapitalReply struct {
	Capital              int32    `protobuf:"varint,1,opt,name=capital,proto3" json:"capital,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamCapitalReply) Reset()         { *m = TeamCapitalReply{} }
func (m *TeamCapitalReply) String() string { return proto.CompactTextString(m) }
func (*TeamCapitalReply) ProtoMessage()    {}
func (*TeamCapitalReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{10}
}

func (m *TeamCapitalReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamCapitalReply.Unmarshal(m, b)
}
func (m *TeamCapitalReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamCapitalReply.Marshal(b, m, deterministic)
}
func (m *TeamCapitalReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamCapitalReply.Merge(m, src)
}
func (m *TeamCapitalReply) XXX_Size() int {
	return xxx_messageInfo_TeamCapitalReply.Size(m)
}
func (m *TeamCapitalReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamCapitalReply.DiscardUnknown(m)
}

var xxx_messageInfo_TeamCapitalReply proto.InternalMessageInfo

func (m *TeamCapitalReply) GetCapital() int32 {
	if m != nil {
		return m.Capital
	}
	return 0
}

type PlayerCostReply struct {
	Cost                 int32    `protobuf:"varint,1,opt,name=cost,proto3" json:"cost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerCostReply) Reset()         { *m = PlayerCostReply{} }
func (m *PlayerCostReply) String() string { return proto.CompactTextString(m) }
func (*PlayerCostReply) ProtoMessage()    {}
func (*PlayerCostReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{11}
}

func (m *PlayerCostReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerCostReply.Unmarshal(m, b)
}
func (m *PlayerCostReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerCostReply.Marshal(b, m, deterministic)
}
func (m *PlayerCostReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerCostReply.Merge(m, src)
}
func (m *PlayerCostReply) XXX_Size() int {
	return xxx_messageInfo_PlayerCostReply.Size(m)
}
func (m *PlayerCostReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerCostReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerCostReply proto.InternalMessageInfo

func (m *PlayerCostReply) GetCost() int32 {
	if m != nil {
		return m.Cost
	}
	return 0
}

type PlayerTransferRequest struct {
	Transfer             int32    `protobuf:"varint,1,opt,name=transfer,proto3" json:"transfer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerTransferRequest) Reset()         { *m = PlayerTransferRequest{} }
func (m *PlayerTransferRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerTransferRequest) ProtoMessage()    {}
func (*PlayerTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4204cc63886395c8, []int{12}
}

func (m *PlayerTransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerTransferRequest.Unmarshal(m, b)
}
func (m *PlayerTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerTransferRequest.Marshal(b, m, deterministic)
}
func (m *PlayerTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerTransferRequest.Merge(m, src)
}
func (m *PlayerTransferRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerTransferRequest.Size(m)
}
func (m *PlayerTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerTransferRequest proto.InternalMessageInfo

func (m *PlayerTransferRequest) GetTransfer() int32 {
	if m != nil {
		return m.Transfer
	}
	return 0
}

func init() {
	proto.RegisterType((*TableRequest)(nil), "pb.TableRequest")
	proto.RegisterType((*Table)(nil), "pb.Table")
	proto.RegisterType((*TableReply)(nil), "pb.TableReply")
	proto.RegisterType((*TeamRequest)(nil), "pb.TeamRequest")
	proto.RegisterType((*Player)(nil), "pb.Player")
	proto.RegisterType((*Players)(nil), "pb.Players")
	proto.RegisterType((*PositionRequest)(nil), "pb.PositionRequest")
	proto.RegisterType((*PlayerRequest)(nil), "pb.PlayerRequest")
	proto.RegisterType((*OpsReply)(nil), "pb.OpsReply")
	proto.RegisterType((*TeamCapitalRequest)(nil), "pb.TeamCapitalRequest")
	proto.RegisterType((*TeamCapitalReply)(nil), "pb.TeamCapitalReply")
	proto.RegisterType((*PlayerCostReply)(nil), "pb.PlayerCostReply")
	proto.RegisterType((*PlayerTransferRequest)(nil), "pb.PlayerTransferRequest")
}

func init() { proto.RegisterFile("premierleague.proto", fileDescriptor_4204cc63886395c8) }

var fileDescriptor_4204cc63886395c8 = []byte{
	// 743 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x5d, 0x6f, 0x13, 0x3b,
	0x10, 0xcd, 0xa6, 0xcd, 0xc7, 0x4e, 0xd2, 0xa6, 0xd7, 0xed, 0xed, 0xdd, 0xe6, 0xde, 0xab, 0x06,
	0x03, 0x52, 0x54, 0xfa, 0xa1, 0xa6, 0x12, 0x42, 0x42, 0x3c, 0xb5, 0x52, 0x5f, 0x2a, 0x88, 0xd2,
	0x20, 0x1e, 0x2b, 0x27, 0x71, 0xaa, 0x15, 0x9b, 0xb5, 0x59, 0xbb, 0x54, 0xf9, 0x4d, 0x20, 0xfe,
	0x05, 0x0f, 0xfc, 0x2b, 0xe4, 0xb1, 0x9d, 0xdd, 0x84, 0x52, 0xf1, 0xe6, 0x39, 0xe7, 0xcc, 0x78,
	0x7c, 0x66, 0xb2, 0x81, 0x6d, 0x99, 0xf1, 0x59, 0xcc, 0xb3, 0x84, 0xb3, 0xdb, 0x3b, 0x7e, 0x2c,
	0x33, 0xa1, 0x05, 0x29, 0xcb, 0x11, 0x3d, 0x82, 0xe6, 0x90, 0x8d, 0x12, 0x3e, 0xe0, 0x9f, 0xee,
	0xb8, 0xd2, 0xe4, 0x7f, 0x00, 0x6d, 0xe2, 0x9b, 0x94, 0xcd, 0x78, 0x14, 0x74, 0x82, 0x6e, 0x38,
	0x08, 0x11, 0x79, 0xcb, 0x66, 0x9c, 0x7e, 0x29, 0x43, 0x05, 0xf5, 0xe4, 0x5f, 0x08, 0x35, 0x67,
	0xb3, 0xa2, 0xae, 0x6e, 0x00, 0x23, 0x23, 0xfb, 0xd0, 0x40, 0x52, 0x26, 0x6c, 0xce, 0x27, 0x51,
	0xb9, 0x13, 0x74, 0x2b, 0x03, 0x30, 0x50, 0x1f, 0x11, 0xb2, 0x07, 0x28, 0xbe, 0xb9, 0x17, 0x69,
	0xb4, 0x86, 0x6c, 0xcd, 0xc4, 0x1f, 0x44, 0x8a, 0x1d, 0x18, 0x6a, 0x92, 0xb1, 0xfb, 0x34, 0x5a,
	0x47, 0x12, 0xaf, 0xba, 0x30, 0xc0, 0xe2, 0xde, 0x44, 0x28, 0x1d, 0x55, 0x90, 0xc5, 0x52, 0x57,
	0x42, 0x69, 0xf2, 0x0f, 0x60, 0x99, 0x9b, 0xdb, 0x69, 0x54, 0x45, 0xaa, 0x6a, 0xc2, 0xcb, 0x69,
	0x4e, 0xb0, 0xa8, 0x56, 0x20, 0x58, 0x4e, 0x4c, 0xa2, 0x7a, 0x81, 0x98, 0xe4, 0x4f, 0x10, 0x71,
	0xaa, 0x55, 0x14, 0x16, 0x9e, 0x80, 0x08, 0x79, 0x02, 0x4d, 0x14, 0x8c, 0x99, 0x8c, 0x35, 0x4b,
	0x22, 0x40, 0x05, 0x26, 0x9d, 0x5b, 0x88, 0x1e, 0x01, 0x38, 0x73, 0x65, 0x32, 0x27, 0xfb, 0x50,
	0x31, 0xa4, 0x8a, 0x82, 0xce, 0x5a, 0xb7, 0xd1, 0x0b, 0x8f, 0xe5, 0xe8, 0xd8, 0xd2, 0x16, 0xa7,
	0x07, 0xd0, 0x18, 0x72, 0x36, 0xf3, 0xa3, 0x78, 0xcc, 0x61, 0xfa, 0xad, 0x0c, 0x55, 0xf4, 0x32,
	0x23, 0x04, 0xd6, 0x0b, 0x12, 0x3c, 0x1b, 0xcc, 0x48, 0xd1, 0xf9, 0x70, 0x80, 0x67, 0xd2, 0x81,
	0x46, 0xca, 0x74, 0x2c, 0x52, 0x96, 0xc4, 0x7a, 0x8e, 0xb6, 0x87, 0x83, 0x22, 0x44, 0xda, 0x50,
	0x97, 0x42, 0xc5, 0x06, 0x40, 0xe3, 0xc3, 0xc1, 0x22, 0x36, 0xd9, 0x4c, 0x4a, 0xce, 0x32, 0x9e,
	0x8e, 0xb9, 0x72, 0xce, 0x17, 0x21, 0xb2, 0x03, 0x95, 0x5b, 0xc1, 0x12, 0xe5, 0xac, 0xb7, 0x01,
	0x89, 0xa0, 0xc6, 0x94, 0x8a, 0x95, 0x56, 0xce, 0x79, 0x1f, 0x92, 0x5d, 0xa8, 0x4a, 0xa6, 0x14,
	0x57, 0xde, 0x79, 0x1b, 0x91, 0x67, 0xb0, 0x11, 0xa7, 0x9a, 0x67, 0x63, 0x2e, 0xcd, 0xcd, 0xde,
	0xfb, 0x65, 0xd0, 0xd4, 0xd5, 0x6c, 0xfc, 0x31, 0xe1, 0xca, 0x39, 0xef, 0x43, 0xd3, 0xc7, 0x54,
	0xdc, 0x25, 0x2a, 0x6a, 0xd8, 0x3e, 0x30, 0xa0, 0x27, 0x50, 0xb3, 0x7e, 0x99, 0x0b, 0x6a, 0xd2,
	0x1e, 0xdd, 0x28, 0xc0, 0x8c, 0xc2, 0xb2, 0x03, 0x4f, 0xd1, 0x23, 0x68, 0xf5, 0xdd, 0xe3, 0xfd,
	0x44, 0x8a, 0xfe, 0x04, 0xcb, 0xfe, 0xd0, 0xa7, 0xb0, 0xe1, 0x2a, 0x38, 0xf1, 0x03, 0x63, 0xa1,
	0xff, 0x41, 0xfd, 0x9d, 0x54, 0x76, 0x1d, 0xb6, 0x60, 0x4d, 0x48, 0xe5, 0x68, 0x73, 0xa4, 0x5d,
	0x20, 0xc3, 0x7c, 0x7b, 0x1e, 0xab, 0x73, 0x08, 0x5b, 0x4b, 0x4a, 0x53, 0x2f, 0x82, 0x9a, 0x5f,
	0xc5, 0xc0, 0x1a, 0xe2, 0x42, 0xfa, 0x1c, 0x5a, 0xb6, 0xb5, 0x73, 0xa1, 0xb4, 0x15, 0x13, 0x58,
	0x1f, 0x9b, 0x1f, 0x90, 0x55, 0xe2, 0x99, 0x9e, 0xc1, 0xdf, 0x56, 0x36, 0xcc, 0x58, 0xaa, 0xa6,
	0xf9, 0x4b, 0xda, 0x50, 0xd7, 0x0e, 0x72, 0x09, 0x8b, 0xb8, 0xf7, 0x35, 0x80, 0xe6, 0xb5, 0x66,
	0x5a, 0x5d, 0xf3, 0xec, 0x73, 0x3c, 0xe6, 0xe4, 0x04, 0xc2, 0xab, 0x58, 0x69, 0xfb, 0x91, 0xd8,
	0xca, 0x77, 0xdc, 0xd6, 0x6a, 0x6f, 0x16, 0x10, 0x99, 0xcc, 0x69, 0x89, 0x9c, 0x42, 0x0b, 0x13,
	0xfc, 0xc7, 0x21, 0x53, 0xa4, 0x85, 0xa2, 0xfc, 0xa7, 0xd0, 0x6e, 0xe4, 0x03, 0x52, 0xb4, 0x44,
	0x5e, 0x01, 0x31, 0x29, 0x7d, 0xa1, 0x8c, 0xf5, 0x3e, 0x6b, 0x1b, 0x45, 0xcb, 0x23, 0x5b, 0xc9,
	0xec, 0xfd, 0x08, 0xfc, 0x98, 0x7c, 0xbf, 0x87, 0x10, 0x5e, 0x72, 0xed, 0x7e, 0x4a, 0x7f, 0x15,
	0x16, 0xc1, 0x15, 0x28, 0xec, 0x06, 0x2d, 0x91, 0x03, 0x68, 0x9e, 0x67, 0x9c, 0x69, 0xee, 0x12,
	0x0a, 0x6c, 0xbb, 0x69, 0xce, 0x7e, 0xbc, 0xb4, 0x44, 0x5e, 0xc0, 0xc6, 0x7b, 0xc9, 0x26, 0x7f,
	0x26, 0x3e, 0x85, 0xe6, 0x05, 0x4f, 0xb8, 0xe6, 0xfd, 0xab, 0xdf, 0x75, 0xb2, 0x92, 0xd2, 0xfb,
	0x1e, 0x40, 0xcb, 0x8f, 0xca, 0xbf, 0xe6, 0x8d, 0xfd, 0x84, 0xb8, 0xc5, 0x20, 0xbb, 0xde, 0xc8,
	0xe5, 0x9d, 0x6a, 0xef, 0xfc, 0x82, 0xdb, 0x2e, 0x5e, 0x02, 0xe4, 0x9b, 0xf2, 0x50, 0x0f, 0xdb,
	0x39, 0xb4, 0x58, 0x26, 0x5a, 0x22, 0xaf, 0x61, 0xd3, 0x77, 0xe2, 0xde, 0xba, 0x97, 0x0b, 0x57,
	0xd6, 0x69, 0xf5, 0x1d, 0xa3, 0x2a, 0xfe, 0x1b, 0x9d, 0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x18,
	0x5c, 0xe5, 0x93, 0xa4, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatsServiceClient is the client API for StatsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsServiceClient interface {
	ListTable(ctx context.Context, in *TableRequest, opts ...grpc.CallOption) (*TableReply, error)
	ListTeamPlayers(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*Players, error)
	ListPostionPlayers(ctx context.Context, in *PositionRequest, opts ...grpc.CallOption) (*Players, error)
}

type statsServiceClient struct {
	cc *grpc.ClientConn
}

func NewStatsServiceClient(cc *grpc.ClientConn) StatsServiceClient {
	return &statsServiceClient{cc}
}

func (c *statsServiceClient) ListTable(ctx context.Context, in *TableRequest, opts ...grpc.CallOption) (*TableReply, error) {
	out := new(TableReply)
	err := c.cc.Invoke(ctx, "/pb.StatsService/ListTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) ListTeamPlayers(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*Players, error) {
	out := new(Players)
	err := c.cc.Invoke(ctx, "/pb.StatsService/ListTeamPlayers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) ListPostionPlayers(ctx context.Context, in *PositionRequest, opts ...grpc.CallOption) (*Players, error) {
	out := new(Players)
	err := c.cc.Invoke(ctx, "/pb.StatsService/ListPostionPlayers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatsServiceServer is the server API for StatsService service.
type StatsServiceServer interface {
	ListTable(context.Context, *TableRequest) (*TableReply, error)
	ListTeamPlayers(context.Context, *TeamRequest) (*Players, error)
	ListPostionPlayers(context.Context, *PositionRequest) (*Players, error)
}

// UnimplementedStatsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStatsServiceServer struct {
}

func (*UnimplementedStatsServiceServer) ListTable(ctx context.Context, req *TableRequest) (*TableReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTable not implemented")
}
func (*UnimplementedStatsServiceServer) ListTeamPlayers(ctx context.Context, req *TeamRequest) (*Players, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTeamPlayers not implemented")
}
func (*UnimplementedStatsServiceServer) ListPostionPlayers(ctx context.Context, req *PositionRequest) (*Players, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPostionPlayers not implemented")
}

func RegisterStatsServiceServer(s *grpc.Server, srv StatsServiceServer) {
	s.RegisterService(&_StatsService_serviceDesc, srv)
}

func _StatsService_ListTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ListTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.StatsService/ListTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ListTable(ctx, req.(*TableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_ListTeamPlayers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ListTeamPlayers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.StatsService/ListTeamPlayers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ListTeamPlayers(ctx, req.(*TeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_ListPostionPlayers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ListPostionPlayers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.StatsService/ListPostionPlayers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ListPostionPlayers(ctx, req.(*PositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.StatsService",
	HandlerType: (*StatsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTable",
			Handler:    _StatsService_ListTable_Handler,
		},
		{
			MethodName: "ListTeamPlayers",
			Handler:    _StatsService_ListTeamPlayers_Handler,
		},
		{
			MethodName: "ListPostionPlayers",
			Handler:    _StatsService_ListPostionPlayers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "premierleague.proto",
}

// PlayerServiceClient is the client API for PlayerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerServiceClient interface {
	GetPlayer(ctx context.Context, in *PlayerRequest, opts ...grpc.CallOption) (*Player, error)
	CreatePlayer(ctx context.Context, in *Player, opts ...grpc.CallOption) (*OpsReply, error)
	UpadatePlayer(ctx context.Context, in *Player, opts ...grpc.CallOption) (*OpsReply, error)
	DeletePLayer(ctx context.Context, in *PlayerRequest, opts ...grpc.CallOption) (*OpsReply, error)
}

type playerServiceClient struct {
	cc *grpc.ClientConn
}

func NewPlayerServiceClient(cc *grpc.ClientConn) PlayerServiceClient {
	return &playerServiceClient{cc}
}

func (c *playerServiceClient) GetPlayer(ctx context.Context, in *PlayerRequest, opts ...grpc.CallOption) (*Player, error) {
	out := new(Player)
	err := c.cc.Invoke(ctx, "/pb.PlayerService/GetPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerServiceClient) CreatePlayer(ctx context.Context, in *Player, opts ...grpc.CallOption) (*OpsReply, error) {
	out := new(OpsReply)
	err := c.cc.Invoke(ctx, "/pb.PlayerService/CreatePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerServiceClient) UpadatePlayer(ctx context.Context, in *Player, opts ...grpc.CallOption) (*OpsReply, error) {
	out := new(OpsReply)
	err := c.cc.Invoke(ctx, "/pb.PlayerService/UpadatePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerServiceClient) DeletePLayer(ctx context.Context, in *PlayerRequest, opts ...grpc.CallOption) (*OpsReply, error) {
	out := new(OpsReply)
	err := c.cc.Invoke(ctx, "/pb.PlayerService/DeletePLayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayerServiceServer is the server API for PlayerService service.
type PlayerServiceServer interface {
	GetPlayer(context.Context, *PlayerRequest) (*Player, error)
	CreatePlayer(context.Context, *Player) (*OpsReply, error)
	UpadatePlayer(context.Context, *Player) (*OpsReply, error)
	DeletePLayer(context.Context, *PlayerRequest) (*OpsReply, error)
}

// UnimplementedPlayerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlayerServiceServer struct {
}

func (*UnimplementedPlayerServiceServer) GetPlayer(ctx context.Context, req *PlayerRequest) (*Player, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlayer not implemented")
}
func (*UnimplementedPlayerServiceServer) CreatePlayer(ctx context.Context, req *Player) (*OpsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePlayer not implemented")
}
func (*UnimplementedPlayerServiceServer) UpadatePlayer(ctx context.Context, req *Player) (*OpsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpadatePlayer not implemented")
}
func (*UnimplementedPlayerServiceServer) DeletePLayer(ctx context.Context, req *PlayerRequest) (*OpsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePLayer not implemented")
}

func RegisterPlayerServiceServer(s *grpc.Server, srv PlayerServiceServer) {
	s.RegisterService(&_PlayerService_serviceDesc, srv)
}

func _PlayerService_GetPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServiceServer).GetPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerService/GetPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServiceServer).GetPlayer(ctx, req.(*PlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerService_CreatePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServiceServer).CreatePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerService/CreatePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServiceServer).CreatePlayer(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerService_UpadatePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServiceServer).UpadatePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerService/UpadatePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServiceServer).UpadatePlayer(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerService_DeletePLayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServiceServer).DeletePLayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerService/DeletePLayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServiceServer).DeletePLayer(ctx, req.(*PlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlayerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.PlayerService",
	HandlerType: (*PlayerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlayer",
			Handler:    _PlayerService_GetPlayer_Handler,
		},
		{
			MethodName: "CreatePlayer",
			Handler:    _PlayerService_CreatePlayer_Handler,
		},
		{
			MethodName: "UpadatePlayer",
			Handler:    _PlayerService_UpadatePlayer_Handler,
		},
		{
			MethodName: "DeletePLayer",
			Handler:    _PlayerService_DeletePLayer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "premierleague.proto",
}

// TransferServiceClient is the client API for TransferService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransferServiceClient interface {
	TeamCapital(ctx context.Context, in *TeamCapitalRequest, opts ...grpc.CallOption) (*TeamCapitalReply, error)
	PlayerCost(ctx context.Context, in *PlayerRequest, opts ...grpc.CallOption) (*PlayerCostReply, error)
	TransferPlayer(ctx context.Context, in *PlayerTransferRequest, opts ...grpc.CallOption) (*OpsReply, error)
}

type transferServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransferServiceClient(cc *grpc.ClientConn) TransferServiceClient {
	return &transferServiceClient{cc}
}

func (c *transferServiceClient) TeamCapital(ctx context.Context, in *TeamCapitalRequest, opts ...grpc.CallOption) (*TeamCapitalReply, error) {
	out := new(TeamCapitalReply)
	err := c.cc.Invoke(ctx, "/pb.TransferService/TeamCapital", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transferServiceClient) PlayerCost(ctx context.Context, in *PlayerRequest, opts ...grpc.CallOption) (*PlayerCostReply, error) {
	out := new(PlayerCostReply)
	err := c.cc.Invoke(ctx, "/pb.TransferService/PlayerCost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transferServiceClient) TransferPlayer(ctx context.Context, in *PlayerTransferRequest, opts ...grpc.CallOption) (*OpsReply, error) {
	out := new(OpsReply)
	err := c.cc.Invoke(ctx, "/pb.TransferService/TransferPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransferServiceServer is the server API for TransferService service.
type TransferServiceServer interface {
	TeamCapital(context.Context, *TeamCapitalRequest) (*TeamCapitalReply, error)
	PlayerCost(context.Context, *PlayerRequest) (*PlayerCostReply, error)
	TransferPlayer(context.Context, *PlayerTransferRequest) (*OpsReply, error)
}

// UnimplementedTransferServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTransferServiceServer struct {
}

func (*UnimplementedTransferServiceServer) TeamCapital(ctx context.Context, req *TeamCapitalRequest) (*TeamCapitalReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TeamCapital not implemented")
}
func (*UnimplementedTransferServiceServer) PlayerCost(ctx context.Context, req *PlayerRequest) (*PlayerCostReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerCost not implemented")
}
func (*UnimplementedTransferServiceServer) TransferPlayer(ctx context.Context, req *PlayerTransferRequest) (*OpsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferPlayer not implemented")
}

func RegisterTransferServiceServer(s *grpc.Server, srv TransferServiceServer) {
	s.RegisterService(&_TransferService_serviceDesc, srv)
}

func _TransferService_TeamCapital_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamCapitalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransferServiceServer).TeamCapital(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TransferService/TeamCapital",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransferServiceServer).TeamCapital(ctx, req.(*TeamCapitalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransferService_PlayerCost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransferServiceServer).PlayerCost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TransferService/PlayerCost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransferServiceServer).PlayerCost(ctx, req.(*PlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransferService_TransferPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransferServiceServer).TransferPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TransferService/TransferPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransferServiceServer).TransferPlayer(ctx, req.(*PlayerTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransferService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TransferService",
	HandlerType: (*TransferServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TeamCapital",
			Handler:    _TransferService_TeamCapital_Handler,
		},
		{
			MethodName: "PlayerCost",
			Handler:    _TransferService_PlayerCost_Handler,
		},
		{
			MethodName: "TransferPlayer",
			Handler:    _TransferService_TransferPlayer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "premierleague.proto",
}
